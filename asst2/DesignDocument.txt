Steven Braun

Eric Thomas
Assignment 2 Design Document

Answers to code-reading questions:

1. The "magic numbers" are a subset of the numbers that can appear in the
   e_ident property of the elf header. They represent the characters in the
   name "ELF."

2. UIO_USERISPACE is used for user-created executable code, whereas
   UIO_USERSPACE is used for user-created data.  UIO_SYSSPACE should only be
   used to transfer data to and from the kernel.

3. Because the uio also holds the virtual memory space the file was read to.

4. Files should always be closed when they're not being used so other programs
   can have access to them.

5. mips_usermode in trap.c; it is not machine-dependent

6. Copyin and Copyout are defined in copyinout.c, while memmove is defined in
   memmove.c.  They cannot be implemented as simply because they have to
   cross the boundry between kernel space and user space.

7. It points to the address space availible for the user.

8. 8

9. To restore the previous spl once the function finishes its work.

10. 4

11. Because it doesn't have the code to actually kill the thread.

12. You would have to use a pointer *args to point to where the extra arguments
    are.

13. To simplify the process of making a system call.

14. syscall

Our Approach:

When examining the code, we noticed that threads essentially acted like
processes as far as the operating system was concerned. That inspired our idea
to simply have the process structure hold necessary information that the thread
structure does not contain, and add a struct process to the thread structure.
The information in struct process include the pid and the user address space.

Description:

The core of our implementation is the way pids are handled. We track pids using
an external array of integers defined in process.h.  The array is initialized
in process_bootstrap() to all zeroes.  Then, when a pid is allocated, the index
corresponding to it is changed to a one. This allows rapid checking of pids
without the tedium of linked lists or hash tables. The process structure is
the only novel structure our implementation requires. This way, we can make
efficient usage of already existing code.

Pros and Cons:

As mentioned previously, this approach allows higher level process management
with minimal effort.  The downside is somewhat limited functionality.  For
example, multiple threads within a process are not possible.  However, with
the kinds of programs likely to be used with this os, it is unlikely that this
will matter.

Alternatives Considered:

Hash tables and linked lists were considered to represent the pid table.
They were rejected due to the existence of a simpler method, which was used
for this project. The idea of a pid struct was also rejected for the same
reason.
